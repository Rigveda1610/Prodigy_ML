# -*- coding: utf-8 -*-
"""PRODIGY_ML_01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n-_f6nrjjUTW2ipkq_1XXb6PF8Uh-w_s
"""

# Linear Regression for House Price Prediction

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score


# 1. Load Data

train = pd.read_csv("train.csv")
test = pd.read_csv("test.csv")


# 2. Feature Engineering

# Create Bathrooms feature (FullBath + 0.5 * HalfBath)
train["Bathrooms"] = train["FullBath"] + 0.5 * train["HalfBath"]
test["Bathrooms"] = test["FullBath"] + 0.5 * test["HalfBath"]

# Select features
features = ["GrLivArea", "BedroomAbvGr", "Bathrooms"]
X = train[features]
y = train["SalePrice"]


# 3. Train-Test Split for Validation

X_train, X_val, y_train, y_val = train_test_split(
    X, y, test_size=0.2, random_state=42
)


# 4. Train Linear Regression

model = LinearRegression()
model.fit(X_train, y_train)


# 5. Evaluate Model

y_pred = model.predict(X_val)

mse = mean_squared_error(y_val, y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(y_val, y_pred)

print("Model Evaluation:")
print(f"RMSE: {rmse:.2f}")
print(f"RÂ²: {r2:.2f}")
print("Coefficients:", model.coef_)
print("Intercept:", model.intercept_)


# 6. Predict on Test Set

X_test = test[features]
test_predictions = model.predict(X_test)

# 7. Save Submission File

submission = pd.DataFrame({
    "Id": test["Id"],
    "SalePrice": test_predictions
})

submission.to_csv("submission.csv", index=False)
print("submission.csv file created successfully!")