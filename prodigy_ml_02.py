# -*- coding: utf-8 -*-
"""PRODIGY_ML_02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eLrFs8uenM6YGCjPtKdfoK_vjBgpnQFz
"""

# K-Means Clustering for Customer Segmentation

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans


# 1. Load Data

data = pd.read_csv("Mall_Customers.csv")

# Select features: Annual Income and Spending Score
X = data[["Annual Income (k$)", "Spending Score (1-100)"]]


# 2. Apply K-Means with Optimal Clusters (k=5)

kmeans = KMeans(n_clusters=5, init="k-means++", random_state=42, n_init=10)
clusters = kmeans.fit_predict(X)

# Add cluster column to dataset
data["Cluster"] = clusters


# 3. Visualize Clusters

plt.figure(figsize=(8,6))

# Plot each cluster
plt.scatter(X.values[clusters == 0, 0], X.values[clusters == 0, 1],
            s=80, c="red", label="Cluster 1")
plt.scatter(X.values[clusters == 1, 0], X.values[clusters == 1, 1],
            s=80, c="blue", label="Cluster 2")
plt.scatter(X.values[clusters == 2, 0], X.values[clusters == 2, 1],
            s=80, c="green", label="Cluster 3")
plt.scatter(X.values[clusters == 3, 0], X.values[clusters == 3, 1],
            s=80, c="purple", label="Cluster 4")
plt.scatter(X.values[clusters == 4, 0], X.values[clusters == 4, 1],
            s=80, c="orange", label="Cluster 5")

# Plot centroids
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1],
            s=300, c="yellow", marker="*", edgecolors="black", label="Centroids")

plt.title("Customer Segments (K-Means Clustering)")
plt.xlabel("Annual Income (k$)")
plt.ylabel("Spending Score (1-100)")
plt.legend()
plt.show()


# 4. Save clustered data

data.to_csv("customers_clustered.csv", index=False)
print("Clustering complete! Results saved to customers_clustered.csv")

